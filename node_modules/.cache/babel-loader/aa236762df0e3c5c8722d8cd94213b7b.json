{"ast":null,"code":"var _jsxFileName = \"/home/klihsman/Documentos/projetos/Portifolio/frontend/src/components/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 300\n  }\n});\nexport default function MediaCard() {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUsers] = useState({});\n\n  const Search = async () => {\n    await api.get('/users').then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n      alert(err.response.data);\n    });\n  };\n\n  useEffect(() => {\n    Search();\n  }, []);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      position: 'absolute'\n    },\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: user.avatar_url,\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: user.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"LinkedIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MediaCard, \"7lfNZ+yDYYwQjVQssIp/Q6WTfzY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/home/klihsman/Documentos/projetos/Portifolio/frontend/src/components/Card/index.js"],"names":["React","useEffect","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","api","useStyles","root","maxWidth","media","height","MediaCard","classes","user","setUsers","Search","get","then","res","data","catch","err","alert","response","console","log","position","avatar_url","name","bio"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport api from '../../services/api';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 300,\n  },\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  const [user, setUsers] = useState({});\n  \n  const Search = async () => {\n      await api.get('/users')\n      .then((res) => {\n          setUsers(res.data)\n      }).catch((err) => {\n          alert(err.response.data)\n      })\n  }\n\n  useEffect(()=>{Search()}, []);\n  console.log(user);\n\n  return (\n    <Card style={{position: 'absolute'}} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={user.avatar_url}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {user.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {user.bio}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          github\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Instagram\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          LinkedIn\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}